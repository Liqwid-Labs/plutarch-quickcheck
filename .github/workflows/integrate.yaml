on:
  push:
    branches: ["main"]
    paths-ignore: ["README.md", "STANDARDS.md", "LICENSE", "CHANGELOG.md"]
  pull_request:
jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base repo
        uses: actions/checkout@v2
      - name: Set up HLint
        uses: haskell/actions/hlint-setup@v1
        with:
          version: 3.4
      - name: Run HLint
        uses: haskell/actions/hlint-run@v2
        with:
          path: '["src/", "examples/natural-tests", "examples/zip-tests", "examples/square-tests"]'
          fail-on: "suggestion"
  check-formatting:
    name: "Check source code formatting"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base repo
        uses: actions/checkout@v2
      - name: Set up Haskell
        id: setup-haskell
        uses: haskell/actions/setup@v1
        with:
          ghc-version: 9.2
          cabal-version: latest
      - name: Get fourmolu
        uses: actions/checkout@v2
        with:
          repository: parsonsmatt/fourmolu
          path: ./fourmolu
          ref: 30ffbe3491e71a6d81620bd66fd842c3ef3f8bd2
      - name: Configure fourmolu
        working-directory: fourmolu
        run: cabal new-configure -w ghc --disable-optimization
      - name: Freeze
        working-directory: fourmolu
        run: cabal new-freeze
      - name: Cache
        uses: actions/cache@v2.1.3
        env:
          V: 0
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            ./fourmolu/dist-newstyle
          key: ${{ env.V }}-${{ hashFiles('./fourmolu/cabal.project.freeze') }}
          restore-keys: ${{ env.V }}-
      - name: Install fourmolu
        working-directory: fourmolu
        run: cabal new-install --install-method=copy --installdir=${{ runner.temp }} --overwrite-policy=always exe:fourmolu
      - name: Check formatting
        run: ./.github/format.sh ${{ runner.temp }}/fourmolu
  check-build:
    name: "Nix build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base repo
        uses: actions/checkout@v2.4.0
      - name: Set up Nix and IOHK caches 
        uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            substituters = https://hydra.iohk.io https://iohk.cachix.org https://cache.nixos.org/
            experimental-features = nix-command flakes

      - name: Add cabal folder to cache
        uses: actions/cache@v2.1.4
        env:
          V: 0
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
          key: ${{ env.V }}-${{ hashFiles('./flake.lock') }}
          restore-keys: ${{ env.V }}-
      - name: Build the project
        run: nix build .#check.x86_64-linux        
